{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","value","visited","error","changeHandler","e","target","name","setState","submitHandler","preventDefault","newMovie","props","onAdd","blurHandler","currentTarget","type","errorMessage","trim","test","this","titleValid","imgUrlValid","imdbUrlValid","imdbIdlValid","formValid","onSubmit","noValidate","Object","entries","key","valueObj","isImgUrl","isImdbUrl","placeholder","classNames","onChange","onBlur","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"syEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,gCCefC,G,MAAb,4MACEC,MAAe,CACbd,MAAO,CACLe,MAAO,GACPC,SAAS,EACTC,MAAO,IAEThB,YAAa,CACXc,MAAO,IAETb,OAAQ,CACNa,MAAO,GACPC,SAAS,EACTC,MAAO,IAETd,QAAS,CACPY,MAAO,GACPC,SAAS,EACTC,MAAO,IAETL,OAAQ,CACNG,MAAO,GACPC,SAAS,EACTC,MAAO,KAvBb,EA2BEC,cAA4E,SAACC,GAC3E,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMN,EAAd,EAAcA,MAEd,EAAKO,UAAS,SAACR,GACb,OAAO,eACJO,EADH,2BAEOP,EAAMO,IAFb,IAGIN,eAlCV,EAwCEQ,cAAmD,SAACJ,GAClDA,EAAEK,iBAEF,MAMI,EAAKV,MALPd,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAS,EALF,EAKEA,OAGIa,EAAW,CACfzB,MAAOA,EAAMe,MACbd,YAAaA,EAAYc,MACzBb,OAAQA,EAAOa,MACfZ,QAASA,EAAQY,MACjBH,OAAQA,EAAOG,OAGjB,EAAKW,MAAMC,MAAMF,GAEjB,EAAKH,SAAS,CACZtB,MAAO,CACLe,MAAO,GACPC,SAAS,EACTC,MAAO,IAEThB,YAAa,CACXc,MAAO,IAETb,OAAQ,CACNa,MAAO,GACPC,SAAS,EACTC,MAAO,IAETd,QAAS,CACPY,MAAO,GACPC,SAAS,EACTC,MAAO,IAETL,OAAQ,CACNG,MAAO,GACPC,SAAS,EACTC,MAAO,OAnFf,EAwFEW,YAAkD,SAACT,GACjD,MAA8BA,EAAEU,cAAxBR,EAAR,EAAQA,KAAMN,EAAd,EAAcA,MAAOe,EAArB,EAAqBA,KAEjBC,EAAe,GAEdhB,EAAMiB,SACTD,EAAY,uBAAmBV,IAGpB,QAATS,IAPe,qKAOeG,KAAKlB,EAAMiB,SAAajB,EAAMiB,SAC9DD,EAAe,oCAGjB,EAAKT,UAAS,SAACR,GACb,OAAO,eACJO,EADH,2BAEOP,EAAMO,IAFb,IAGIL,SAAS,EACTC,MAAOc,SA1GjB,4CAgHE,WAAU,IAAD,OACP,EAKIG,KAAKpB,MAJPd,EADF,EACEA,MACAE,EAFF,EAEEA,OACAC,EAHF,EAGEA,QACAS,EAJF,EAIEA,OAGIuB,EAAanC,EAAMgB,UAAYhB,EAAMiB,MACrCmB,EAAclC,EAAOc,UAAYd,EAAOe,MACxCoB,EAAelC,EAAQa,UAAYb,EAAQc,MAC3CqB,EAAe1B,EAAOI,UAAYJ,EAAOK,MACzCsB,EAAYJ,GAAcC,GAAeC,GAAgBC,EAE/D,OACE,uBACElC,UAAU,iBACVoC,SAAUN,KAAKX,cACfkB,YAAU,EAHZ,UAKE,oBAAIrC,UAAU,wBAAd,4BAECsC,OAAOC,QAAQT,KAAKpB,OAAOJ,KAAI,YAAsB,IAAD,mBAAnBkC,EAAmB,KAAdC,EAAc,KAC7CC,EAAmB,WAARF,EACXG,EAAoB,YAARH,EAEhB7B,EAGE8B,EAHF9B,MACAC,EAEE6B,EAFF7B,QACAC,EACE4B,EADF5B,MAGF,OACE,qCACE,mBAEEb,UAAU,8BAFZ,yBAIYwC,IAHLA,GAME,gBAARA,EACC,qCACI5B,GAAWC,GACX,sBACEb,UAAU,gCADZ,SAIGa,GAJH,UAEU2B,EAFV,iBAOF,uBAEEd,KAAOgB,GAAYC,EAAa,MAAQ,OACxC1B,KAAMuB,EACN7B,MAAOA,EACPiC,YAAW,sBAAiBJ,GAC5BxC,UAAW6C,IAAW,wBAAyB,CAAE,+BAAgCjC,GAAWC,IAC5FiC,SAAU,EAAKhC,cACfiC,OAAQ,EAAKvB,aARf,UACUgB,EADV,aAYF,0BAEEvB,KAAMuB,EACN7B,MAAOA,EACPiC,YAAW,sBAAiBJ,GAC5BM,SAAU,EAAKhC,cALjB,SAOGH,GAPH,UACU6B,EADV,mBAcR,wBACEd,KAAK,SACLsB,UAAWb,EAFb,8BA5LR,GAA8Bc,c,QChBjBC,EAAb,4MACExC,MAAe,CACbL,OAAQ8C,GAFZ,EAKEC,SAAqB,SAAC7C,GACpB,EAAKW,UAAS,SAAAR,GACZ,MAAQ,CAAEL,OAAO,GAAD,mBAAMK,EAAML,QAAZ,CAAoBE,SAP1C,4CAWE,WACE,IAAQF,EAAWyB,KAAKpB,MAAhBL,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUuB,MAAOO,KAAKsB,oBApBhC,GAAyBC,IAAMJ,WCP/BK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fc702432.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import {\n  ChangeEventHandler,\n  Component,\n  FormEventHandler,\n} from 'react';\nimport classNames from 'classnames';\nimport { AddMovie } from '../../types/AddMovie';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: AddMovie;\n};\n\ninterface StateKeyObj {\n  value: string;\n  visited?: boolean;\n  error?: string;\n}\n\ntype State = {\n  title: StateKeyObj;\n  description: StateKeyObj;\n  imgUrl: StateKeyObj;\n  imdbUrl: StateKeyObj;\n  imdbId: StateKeyObj;\n};\n\nexport class NewMovie extends Component<Props> {\n  state: State = {\n    title: {\n      value: '',\n      visited: false,\n      error: '',\n    },\n    description: {\n      value: '',\n    },\n    imgUrl: {\n      value: '',\n      visited: false,\n      error: '',\n    },\n    imdbUrl: {\n      value: '',\n      visited: false,\n      error: '',\n    },\n    imdbId: {\n      value: '',\n      visited: false,\n      error: '',\n    },\n  };\n\n  changeHandler: ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> = (e) => {\n    const { name, value } = e.target;\n\n    this.setState((state: State) => {\n      return {\n        [name]: {\n          ...state[name as keyof State] as unknown as Pick<State, keyof State>,\n          value,\n        },\n      };\n    });\n  };\n\n  submitHandler: FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const newMovie = {\n      title: title.value,\n      description: description.value,\n      imgUrl: imgUrl.value,\n      imdbUrl: imdbUrl.value,\n      imdbId: imdbId.value,\n    };\n\n    this.props.onAdd(newMovie);\n\n    this.setState({\n      title: {\n        value: '',\n        visited: false,\n        error: '',\n      },\n      description: {\n        value: '',\n      },\n      imgUrl: {\n        value: '',\n        visited: false,\n        error: '',\n      },\n      imdbUrl: {\n        value: '',\n        visited: false,\n        error: '',\n      },\n      imdbId: {\n        value: '',\n        visited: false,\n        error: '',\n      },\n    });\n  };\n\n  blurHandler: FormEventHandler<HTMLInputElement> = (e) => {\n    const { name, value, type } = e.currentTarget;\n    const validation = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    let errorMessage = '';\n\n    if (!value.trim()) {\n      errorMessage = `Please enter ${name}`;\n    }\n\n    if (type === 'url' && !validation.test(value.trim()) && !!value.trim()) {\n      errorMessage = 'Please enter correct URL address';\n    }\n\n    this.setState((state: State) => {\n      return {\n        [name]: {\n          ...state[name as keyof State] as unknown as Pick<State, keyof State>,\n          visited: true,\n          error: errorMessage,\n        },\n      };\n    });\n  };\n\n  render() {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const titleValid = title.visited && !title.error;\n    const imgUrlValid = imgUrl.visited && !imgUrl.error;\n    const imdbUrlValid = imdbUrl.visited && !imdbUrl.error;\n    const imdbIdlValid = imdbId.visited && !imdbId.error;\n    const formValid = titleValid && imgUrlValid && imdbUrlValid && imdbIdlValid;\n\n    return (\n      <form\n        className=\"add-movie-form\"\n        onSubmit={this.submitHandler}\n        noValidate\n      >\n        <h2 className=\"add-movie-form__title\">Add movie form</h2>\n\n        {Object.entries(this.state).map(([key, valueObj]) => {\n          const isImgUrl = key === 'imgUrl';\n          const isImdbUrl = key === 'imdbUrl';\n          const {\n            value,\n            visited,\n            error,\n          } = valueObj;\n\n          return (\n            <>\n              <p\n                key={key}\n                className=\"add-movie-form__field-title\"\n              >\n                {`Movie ${key}`}\n              </p>\n\n              {key !== 'description' ? (\n                <>\n                  {(visited && error) && (\n                    <span\n                      className=\"add-movie-form__error-message\"\n                      key={`${key}ErrorMessage`}\n                    >\n                      {error}\n                    </span>\n                  )}\n                  <input\n                    key={`${key}Input`}\n                    type={(isImgUrl || isImdbUrl) ? 'url' : 'text'}\n                    name={key}\n                    value={value}\n                    placeholder={`Enter movie ${key}`}\n                    className={classNames('add-movie-form__field', { 'add-movie-form__field--error': visited && error })}\n                    onChange={this.changeHandler}\n                    onBlur={this.blurHandler}\n                  />\n                </>\n              ) : (\n                <textarea\n                  key={`${key}TextArea`}\n                  name={key}\n                  value={value}\n                  placeholder={`Enter movie ${key}`}\n                  onChange={this.changeHandler}\n                >\n                  {value}\n                </textarea>\n              )}\n            </>\n          );\n        })}\n\n        <button\n          type=\"submit\"\n          disabled={!formValid}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { AddMovie } from './types/AddMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie: AddMovie = (movie) => {\n    this.setState(state => {\n      return ({ movies: [...state.movies, movie] });\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}